<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<properties>
		<!-- <class_root>${basedir}/target/classes</class_root> -->
		<!-- 开发的时候，拷贝到 src 里面 -->
		<class_root>${basedir}/src/main/resources</class_root>
	</properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.1.4</version>
  </parent>

  <groupId>com.d7kj.learn</groupId>
  <artifactId>helloworld</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <dependencies>
	  <!-- https://mvnrepository.com/artifact/javax.validation/validation-api -->
	  <dependency>
		  <groupId>javax.validation</groupId>
		  <artifactId>validation-api</artifactId>
		  <version>2.0.1.Final</version>
	  </dependency>

	  <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-text -->
	  <dependency>
		  <groupId>org.apache.commons</groupId>
		  <artifactId>commons-text</artifactId>
		  <version>1.10.0</version>
	  </dependency>
	  <!-- 查ip -->
	  <dependency>
		  <groupId>org.lionsoul</groupId>
		  <artifactId>ip2region</artifactId>
		  <version>2.7.0</version>
	  </dependency>
  	<!-- 热部署 -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-devtools</artifactId>
  		<optional>true</optional>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-aop</artifactId>
  	</dependency>
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-data-jpa</artifactId>
	  </dependency>
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-data-redis</artifactId>
	  </dependency>
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-test</artifactId>
		  <scope>test</scope>
	  </dependency>
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-websocket</artifactId>
	  </dependency>
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-undertow</artifactId>
	  </dependency>
	  <dependency>
		  <groupId>org.mockito</groupId>
		  <artifactId>mockito-core</artifactId>
		  <scope>test</scope>
	  </dependency>
	  <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-web</artifactId>
		  <exclusions>
			  <exclusion>
				  <groupId>org.springframework.boot</groupId>
				  <artifactId>spring-boot-starter-tomcat</artifactId>
			  </exclusion>
		  </exclusions>
	  </dependency>

	  <!-- https://mvnrepository.com/artifact/com.ibeetl/sql-springboot-starter -->
	  <dependency>
		  <groupId>redis.clients</groupId>
		  <artifactId>jedis</artifactId>
		  <version>3.2.0</version>
	  </dependency>
	  <dependency>
		  <groupId>com.ibeetl</groupId>
		  <artifactId>sql-springboot-starter</artifactId>
		  <version>3.25.6-RELEASE</version>
	  </dependency>

	  <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
	  <dependency>
		  <groupId>org.projectlombok</groupId>
		  <artifactId>lombok</artifactId>
		  <version>1.18.28</version>
		  <scope>provided</scope>
	  </dependency>

	  <!-- Freemarker模板引擎 ,后缀 .ftl
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-freemarker</artifactId>
      </dependency>-->

    <!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
	<dependency>
	    <groupId>commons-lang</groupId>
	    <artifactId>commons-lang</artifactId>
	    <version>2.6</version>
	</dependency>
	<!-- 数据库连接池 https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
	<dependency>
	    <groupId>com.zaxxer</groupId>
	    <artifactId>HikariCP</artifactId>
	    </dependency>

	  <!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
	  <dependency>
		  <groupId>com.mysql</groupId>
		  <artifactId>mysql-connector-j</artifactId>
		  <version>8.1.0</version>
	  </dependency>


	  <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql
      <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
      </dependency>-->

	<!--<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
	 监控 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-actuator</artifactId>
	</dependency>
	  <!-- https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api -->
	  <dependency>
		  <groupId>javax.persistence</groupId>
		  <artifactId>javax.persistence-api</artifactId>
		  <version>2.2</version>
	  </dependency>
	  <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
	  <dependency>
		  <groupId>javax.annotation</groupId>
		  <artifactId>javax.annotation-api</artifactId>
		  <version>1.3.2</version>
	  </dependency>
	  <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
	  <dependency>
		  <groupId>jakarta.servlet</groupId>
		  <artifactId>jakarta.servlet-api</artifactId>
		  <version>6.0.0</version>
		  <scope>provided</scope>
	  </dependency>

  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-compiler-plugin</artifactId>
  			<configuration>
  				<source>1.8</source>
  				<target>1.8</target>
  				<encoding>UTF-8</encoding>
  			</configuration>
  		</plugin>
  		
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>
		<!-- 静态资源引用插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<executions>
				<execution>
					<id>copy-index.html</id>
					<phase>compile</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<outputDirectory>${class_root}/templates</outputDirectory>
						<resources>
							<resource>
								<!-- 拷贝 vue 入口文件 -->
								<directory>${basedir}/front/dist</directory>
								<includes>
									<include>index.html</include>
								</includes>
								<!-- 若已存在，则覆盖 -->
								<filtering>true</filtering>
							</resource>
						</resources>
					</configuration>
				</execution>
				<execution>
					<id>copy-resources</id>
					<phase>compile</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<outputDirectory>${class_root}/static</outputDirectory>
						<resources>
							<resource>
								<!-- 拷贝 vue 编译的文件 -->
								<directory>${basedir}/front/dist</directory>
								<excludes>
									<exclude>index.html</exclude>
								</excludes>
								<!-- 若已存在，则覆盖 -->
								<filtering>true</filtering>
							</resource>
						</resources>
					</configuration>
				</execution>
			</executions>
		</plugin>
  	</plugins>
  </build>
</project>